name: Python Code Quality 
 
on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '../../docs/**'
      - 'radon-report.txt'
  pull_request:
    branches: [main]

permissions:
  contents: write
  security-events: write

jobs:
  code-formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install formatters
      run: |
        python -m pip install --upgrade pip 
        pip install autoflake black isort

    - name: Auto-format code
      run: |
        autoflake --in-place --remove-all-unused-imports --remove-unused-variables -r .
        isort --profile black --atomic .
        black --line-length 120 --target-version py312 --safe .

    - name: Commit changes
      if: github.event_name  == 'push'
      run: |
        git config --global user.name  "Xiangyuan Xie"
        git config --global user.email  "dragonboat_xxy@163.com" 
        git add .
        git diff --quiet HEAD || git commit -m "CI: Auto-format code"
        git push 

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: code-formatting
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install analysis tools
      run: |
        pip install mypy types-requests 

    - name: Type checking
      run: mypy --ignore-missing-imports --explicit-package-bases .

  testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    needs: code-formatting
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt  
        pip install pytest pytest-cov 

    - name: Run tests
      run: |
        pytest --cov=./ --cov-report=xml:coverage.xml  tests/

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: coverage.xml

  complexity-analysis:
    name: Code Complexity
    runs-on: ubuntu-latest
    needs: code-formatting
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4

    - name: Install Radon
      run: pip install radon

    - name: Analyze complexity
      run: |
        radon cc --min C -n D --total-average . > radon-report.txt  
        radon raw --summary . >> radon-report.txt